[{"C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\index.js":"1","C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\App.js":"2","C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\reportWebVitals.js":"3","C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\components\\content.js":"4","C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\components\\read.js":"5","C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\components\\create.js":"6","C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\components\\cryptos.js":"7","C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\components\\crypto.js":"8","C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\components\\edit.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":1144,"mtime":1608831589583,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":227,"mtime":1608585531708,"results":"14","hashOfConfig":"11"},{"size":3095,"mtime":1608839497897,"results":"15","hashOfConfig":"11"},{"size":2933,"mtime":1608828374792,"results":"16","hashOfConfig":"11"},{"size":295,"mtime":1608726600611,"results":"17","hashOfConfig":"11"},{"size":3344,"mtime":1608839409119,"results":"18","hashOfConfig":"11"},{"size":3516,"mtime":1608828463874,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1ydv4fv",{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},"C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\index.js",[],["41","42"],"C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\App.js",["43","44","45","46"],"C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\reportWebVitals.js",[],"C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\components\\content.js",[],"C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\components\\read.js",["47","48"],"C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\components\\create.js",["49"],"import React from 'react';\r\nimport axios from 'axios';\r\n\r\nexport class Create extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onChangeTicker = this.onChangeTicker.bind(this);\r\n        this.onChangePrice = this.onChangePrice.bind(this);\r\n        this.onChangeHoldings = this.onChangeHoldings.bind(this);\r\n\r\n        this.state = {\r\n            Logo: '',\r\n            Ticker: '',\r\n            Price: '',\r\n            Holdings: ''\r\n        }\r\n    }\r\n\r\n    onChangeTicker(e) {\r\n        this.setState({\r\n            Ticker: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangePrice(e) {\r\n        this.setState({\r\n            Price: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeHoldings(e) {\r\n        this.setState({\r\n            Holdings: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        //alert(this.state.Holdings + ' ' + this.state.Ticker + ' added at ' + this.state.Price);\r\n\r\n        const newCrypto = {\r\n            ticker: this.state.Ticker,\r\n            price: this.state.Price,\r\n            holdings: this.state.Holdings,\r\n            logo: this.state.Logo\r\n        }\r\n\r\n        axios.post('http://localhost:4000/api/cryptos', newCrypto)\r\n        .then((response) => {\r\n            if (response.status == 200) {\r\n                window.location = \"/read\" \r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className='App'>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Add Ticker: </label>\r\n                        <input type='text'\r\n                        className='form-control'\r\n                        value={this.state.Ticker}\r\n                        onChange={this.onChangeTicker}></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Add Price: </label>\r\n                        <input type='text'\r\n                        className='form-control'\r\n                        value={this.state.Price}\r\n                        onChange={this.onChangePrice}></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Add Holdings: </label>\r\n                        <input type='text'\r\n                        className='form-control'\r\n                        value={this.state.Holdings}\r\n                        onChange={this.onChangeHoldings}></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type='submit'\r\n                        value='Add Crypto'\r\n                        className='btn btn-dark'></input>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\components\\cryptos.js",[],"C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\components\\crypto.js",["50","51","52"],"C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\components\\edit.js",["53"],"import React from 'react';\r\nimport axios from 'axios';\r\n\r\nexport class Edit extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onChangeTicker = this.onChangeTicker.bind(this);\r\n        this.onChangePrice = this.onChangePrice.bind(this);\r\n        this.onChangeHoldings = this.onChangeHoldings.bind(this);\r\n\r\n        this.state = {\r\n            Logo: '',\r\n            Ticker: '',\r\n            Price: '', \r\n            Holdings: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:4000/api/cryptos/' + this.props.match.params.id)\r\n        .then((response) => {\r\n            this.setState({\r\n                _id: response.data._id,\r\n                Ticker: response.data.ticker,\r\n                Price: response.data.price,\r\n                Holdings: response.data.holdings,\r\n                Logo: response.data.logo\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    onChangeTicker(e) {\r\n        this.setState({\r\n            Ticker: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangePrice(e) {\r\n        this.setState({\r\n            Price: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeHoldings(e) {\r\n        this.setState({\r\n            Holdings: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        //alert(this.state.Holdings + ' ' + this.state.Ticker + ' added at ' + this.state.Price);\r\n\r\n        const newCrypto = {\r\n            ticker: this.state.Ticker,\r\n            price: this.state.Price,\r\n            holdings: this.state.Holdings,\r\n            logo: this.state.Logo,\r\n            _id: this.state._id\r\n        }\r\n\r\n        axios.put('http://localhost:4000/api/cryptos/' + this.state._id, newCrypto)\r\n        .then(res => {\r\n            if (res.status == 200) {\r\n                window.location = \"/read\" \r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className='App'>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Add Ticker: </label>\r\n                        <input type='text'\r\n                        className='form-control'\r\n                        value={this.state.Ticker}\r\n                        onChange={this.onChangeTicker}\r\n                        readOnly></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Add Price: </label>\r\n                        <input type='text'\r\n                        className='form-control'\r\n                        value={this.state.Price}\r\n                        onChange={this.onChangePrice}></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Add Holdings: </label>\r\n                        <input type='text'\r\n                        className='form-control'\r\n                        value={this.state.Holdings}\r\n                        onChange={this.onChangeHoldings}></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type='submit'\r\n                        value='Edit Crypto'\r\n                        className='btn btn-dark'></input>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":12},{"ruleId":"58","severity":1,"message":"62","line":5,"column":9,"nodeType":"60","messageId":"61","endLine":5,"endColumn":15},{"ruleId":"58","severity":1,"message":"63","line":5,"column":17,"nodeType":"60","messageId":"61","endLine":5,"endColumn":20},{"ruleId":"58","severity":1,"message":"64","line":5,"column":22,"nodeType":"60","messageId":"61","endLine":5,"endColumn":31},{"ruleId":"65","severity":1,"message":"66","line":44,"column":13,"nodeType":"67","endLine":44,"endColumn":23},{"ruleId":"68","severity":1,"message":"69","line":54,"column":21,"nodeType":"70","endLine":54,"endColumn":72},{"ruleId":"71","severity":1,"message":"72","line":53,"column":33,"nodeType":"73","messageId":"74","endLine":53,"endColumn":35},{"ruleId":"58","severity":1,"message":"75","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":12},{"ruleId":"58","severity":1,"message":"76","line":3,"column":8,"nodeType":"60","messageId":"61","endLine":3,"endColumn":14},{"ruleId":"77","severity":1,"message":"78","line":32,"column":25,"nodeType":"70","endLine":32,"endColumn":86},{"ruleId":"71","severity":1,"message":"72","line":70,"column":28,"nodeType":"73","messageId":"74","endLine":70,"endColumn":30},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'Nav' is defined but never used.","'Container' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Card' is defined but never used.","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]