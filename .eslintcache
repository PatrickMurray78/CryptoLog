[{"C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\index.js":"1","C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\App.js":"2","C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\reportWebVitals.js":"3","C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\components\\content.js":"4","C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\components\\read.js":"5","C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\components\\create.js":"6","C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\components\\cryptos.js":"7","C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\components\\crypto.js":"8","C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\components\\edit.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":1235,"mtime":1608845279794,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":227,"mtime":1608585531708,"results":"14","hashOfConfig":"11"},{"size":3338,"mtime":1608844720014,"results":"15","hashOfConfig":"11"},{"size":3607,"mtime":1608845146998,"results":"16","hashOfConfig":"11"},{"size":295,"mtime":1608726600611,"results":"17","hashOfConfig":"11"},{"size":3479,"mtime":1608843381370,"results":"18","hashOfConfig":"11"},{"size":3516,"mtime":1608828463874,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1ydv4fv",{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\index.js",[],["43","44"],"C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\App.js",["45","46","47","48"],"C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\reportWebVitals.js",[],"C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\components\\content.js",[],"C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\components\\read.js",["49","50"],"import React from 'react';\r\nimport { Cryptos } from './cryptos';\r\nimport axios from 'axios';\r\nimport Link from 'react-router-dom/Link';\r\n\r\nexport class Read extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.ReloadData = this.ReloadData.bind(this);\r\n    }\r\n\r\n    state = {\r\n        portfolioValue: 0,\r\n        cryptos: []\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:4000/api/cryptos')\r\n        .then((response) => {\r\n            this.setState({ cryptos: response.data })\r\n            this.getPortfolioValue(response);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        });\r\n    }\r\n\r\n    ReloadData() {\r\n        axios.get('http://localhost:4000/api/cryptos')\r\n        .then((response) => {\r\n            this.setState({ cryptos: response.data })\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        });\r\n    }\r\n\r\n    getPortfolioValue(cryptos) {\r\n        // Set total portfolio value\r\n        cryptos.data.forEach(crypto => {\r\n            this.state.portfolioValue += crypto.price * crypto.holdings;\r\n        });\r\n        document.getElementById('portfolioValueID').innerHTML = '$' + Math.round(this.state.portfolioValue * 100) / 100;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div style={{backgroundColor: \"#303030\", minHeight: \"100vh\", position: \"relative\"}}>\r\n                <div style={{backgroundColor: \"grey\", width: \"90%\", height: \"70px\", margin: \"auto\", borderRadius: \"15px\"}}>\r\n                    <h6 style={{color: \"white\", fontFamily: \"monospace\", fontSize: \"80%\", marginBottom: \"5px\", paddingTop: \"7px\"}}>Portfolio Value</h6>\r\n                    <h4 id=\"portfolioValueID\" style={{color: \"white\", fontFamily: \"sans-serif\"}}></h4>\r\n                </div>\r\n                <table width=\"90%\" style={{textAlign: \"right\", color: \"rgba(255, 255, 255, 0.5)\", marginLeft: \"5vw\", marginTop: \"2vh\", marginBottom: \"-2vh\", fontFamily: \"monospace\"}}>\r\n                    <tr>\r\n                        <td width=\"10%\"></td>\r\n                        <td width=\"18%\" style={{textAlign: \"left\"}}>\r\n                            <p>Name</p>\r\n                        </td>\r\n                        <td width=\"18%\">\r\n                            <p>Price</p>\r\n                        </td>\r\n                        <td width=\"18%\">\r\n                            <p>Holdings</p>\r\n                        </td>\r\n                        <td width=\"18%\">\r\n                            <p>Value</p>\r\n                        </td>\r\n                        <td width=\"18%\"></td>\r\n                    </tr>\r\n                </table>\r\n                <Cryptos cryptos={this.state.cryptos} ReloadData={this.ReloadData}></Cryptos>\r\n                <Link to={'/create'}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"70\" height=\"70\" fill=\"currentColor\" class=\"bi bi-plus-circle\" viewBox=\"0 0 16 16\" style={{position: \"absolute\", bottom: \"20px\", color: \"white\"}}>\r\n                        <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                        <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"/>\r\n                    </svg>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\components\\create.js",["51"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport Link from 'react-router-dom/Link';\r\n\r\nexport class Create extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onChangeTicker = this.onChangeTicker.bind(this);\r\n        this.onChangePrice = this.onChangePrice.bind(this);\r\n        this.onChangeHoldings = this.onChangeHoldings.bind(this);\r\n\r\n        this.state = {\r\n            Logo: '',\r\n            Ticker: '',\r\n            Price: '',\r\n            Holdings: ''\r\n        }\r\n    }\r\n\r\n    onChangeTicker(e) {\r\n        this.setState({\r\n            Ticker: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangePrice(e) {\r\n        this.setState({\r\n            Price: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeHoldings(e) {\r\n        this.setState({\r\n            Holdings: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        //alert(this.state.Holdings + ' ' + this.state.Ticker + ' added at ' + this.state.Price);\r\n\r\n        const newCrypto = {\r\n            ticker: this.state.Ticker,\r\n            price: this.state.Price,\r\n            holdings: this.state.Holdings,\r\n            logo: this.state.Logo\r\n        }\r\n\r\n        axios.post('http://localhost:4000/api/cryptos', newCrypto)\r\n        .then((response) => {\r\n            if (response.status == 200) {\r\n                window.location = \"/read\" \r\n            }\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className='App' style={{backgroundColor: \"#303030\", color: \"white\", height: \"100vh\", fontFamily: \"monospace\"}}>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\" style={{width: \"50vw\", margin: \"auto\", paddingTop: \"20px\"}}>\r\n                        <label>Add Ticker: </label>\r\n                        <input type='text'\r\n                        className='form-control'\r\n                        value={this.state.Ticker}\r\n                        onChange={this.onChangeTicker}></input>\r\n                    </div>\r\n                    <div className=\"form-group\" style={{width: \"50vw\", margin: \"auto\", paddingTop: \"20px\"}}>\r\n                        <label>Add Price: </label>\r\n                        <input type='text'\r\n                        className='form-control'\r\n                        value={this.state.Price}\r\n                        onChange={this.onChangePrice}></input>\r\n                    </div>\r\n                    <div className=\"form-group\" style={{width: \"50vw\", margin: \"auto\", paddingTop: \"20px\"}}>\r\n                        <label>Add Holdings: </label>\r\n                        <input type='text'\r\n                        className='form-control'\r\n                        value={this.state.Holdings}\r\n                        onChange={this.onChangeHoldings}></input>\r\n                    </div>\r\n                    <div className=\"form-group\" style={{paddingTop: \"30px\"}}>\r\n                        <Link onClick={this.onSubmit}>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" fill=\"currentColor\" class=\"bi bi-check2\" viewBox=\"0 0 16 16\" style={{color: \"white\"}}>\r\n                                <path d=\"M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z\"/>\r\n                            </svg>\r\n                        </Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\components\\cryptos.js",[],"C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\components\\crypto.js",["52","53","54"],"import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\nimport Link from 'react-router-dom/Link';\r\n\r\nexport class Crypto extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.DeleteCrypto = this.DeleteCrypto.bind(this);\r\n    }\r\n\r\n    DeleteCrypto(e) {\r\n        e.preventDefault();\r\n        console.log(\"Delete: \" + this.props.crypto._id);\r\n\r\n        axios.delete(\"http://localhost:4000/api/cryptos/\" + this.props.crypto._id)\r\n        .then(() => {\r\n            console.log(\"Successfully deleted\")\r\n            this.props.ReloadData();\r\n        })\r\n        .catch();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <table style={{width: \"90%\", marginLeft: \"5vw\", textAlign: \"right\", borderTop: \"1px solid rgba(255, 255, 255, 0.3\", color: \"white\", fontFamily: \"sans-serif\"}}>\r\n                <tr>\r\n                    <td width=\"10%\">\r\n                        <img src={this.props.crypto.logo} style={{height: \"30px\",  width: \"30px\", marginRight: \"10px\"}}></img>\r\n                    </td>\r\n                    <td width=\"18%\" style={{textAlign: \"left\"}}>\r\n                        <h5>{this.props.crypto.ticker}</h5>\r\n                    </td>\r\n                    <td width=\"18%\">\r\n                        <h5>${this.props.crypto.price}</h5>\r\n                    </td>\r\n                    <td width=\"18%\">\r\n                        <h5>{this.props.crypto.holdings}</h5>\r\n                    </td>\r\n                    <td width=\"18%\">\r\n                        <h5>${Math.round((this.props.crypto.holdings * this.props.crypto.price)*100)/100}</h5>\r\n                    </td>\r\n                    <td width=\"18%\" style={{textAlign: \"center\"}}>\r\n                        <Link to={'/edit/' + this.props.crypto._id}>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"35\" height=\"35\" fill=\"currentColor\" class=\"bi bi-pencil\" viewBox=\"0 0 16 16\" style={{paddingRight:\"10px\", color: \"white\"}}>\r\n                                <path d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5L13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175l-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\"/>\r\n                            </svg>\r\n                        </Link>\r\n                        <Link onClick={this.DeleteCrypto}>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"45\" height=\"45\" fill=\"currentColor\" class=\"bi bi-trash\" viewBox=\"0 0 16 16\" style={{paddingLeft:\"20px\", color: \"white\"}}>\r\n                                <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\r\n                                <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\r\n                            </svg>\r\n                        </Link>\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n        )\r\n    }\r\n}","C:\\Users\\patri\\OneDrive - GMIT\\Projects\\CryptoLog\\cryptolog\\src\\components\\edit.js",["55"],"import React from 'react';\r\nimport axios from 'axios';\r\n\r\nexport class Edit extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onChangeTicker = this.onChangeTicker.bind(this);\r\n        this.onChangePrice = this.onChangePrice.bind(this);\r\n        this.onChangeHoldings = this.onChangeHoldings.bind(this);\r\n\r\n        this.state = {\r\n            Logo: '',\r\n            Ticker: '',\r\n            Price: '', \r\n            Holdings: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:4000/api/cryptos/' + this.props.match.params.id)\r\n        .then((response) => {\r\n            this.setState({\r\n                _id: response.data._id,\r\n                Ticker: response.data.ticker,\r\n                Price: response.data.price,\r\n                Holdings: response.data.holdings,\r\n                Logo: response.data.logo\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    onChangeTicker(e) {\r\n        this.setState({\r\n            Ticker: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangePrice(e) {\r\n        this.setState({\r\n            Price: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeHoldings(e) {\r\n        this.setState({\r\n            Holdings: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        //alert(this.state.Holdings + ' ' + this.state.Ticker + ' added at ' + this.state.Price);\r\n\r\n        const newCrypto = {\r\n            ticker: this.state.Ticker,\r\n            price: this.state.Price,\r\n            holdings: this.state.Holdings,\r\n            logo: this.state.Logo,\r\n            _id: this.state._id\r\n        }\r\n\r\n        axios.put('http://localhost:4000/api/cryptos/' + this.state._id, newCrypto)\r\n        .then(res => {\r\n            if (res.status == 200) {\r\n                window.location = \"/read\" \r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className='App'>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Add Ticker: </label>\r\n                        <input type='text'\r\n                        className='form-control'\r\n                        value={this.state.Ticker}\r\n                        onChange={this.onChangeTicker}\r\n                        readOnly></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Add Price: </label>\r\n                        <input type='text'\r\n                        className='form-control'\r\n                        value={this.state.Price}\r\n                        onChange={this.onChangePrice}></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Add Holdings: </label>\r\n                        <input type='text'\r\n                        className='form-control'\r\n                        value={this.state.Holdings}\r\n                        onChange={this.onChangeHoldings}></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type='submit'\r\n                        value='Edit Crypto'\r\n                        className='btn btn-dark'></input>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":2,"column":8,"nodeType":"62","messageId":"63","endLine":2,"endColumn":12},{"ruleId":"60","severity":1,"message":"64","line":5,"column":9,"nodeType":"62","messageId":"63","endLine":5,"endColumn":15},{"ruleId":"60","severity":1,"message":"65","line":5,"column":17,"nodeType":"62","messageId":"63","endLine":5,"endColumn":20},{"ruleId":"60","severity":1,"message":"66","line":5,"column":22,"nodeType":"62","messageId":"63","endLine":5,"endColumn":31},{"ruleId":"67","severity":1,"message":"68","line":44,"column":13,"nodeType":"69","endLine":44,"endColumn":23},{"ruleId":"70","severity":1,"message":"71","line":54,"column":21,"nodeType":"72","endLine":54,"endColumn":98},{"ruleId":"73","severity":1,"message":"74","line":54,"column":33,"nodeType":"75","messageId":"76","endLine":54,"endColumn":35},{"ruleId":"60","severity":1,"message":"77","line":2,"column":8,"nodeType":"62","messageId":"63","endLine":2,"endColumn":12},{"ruleId":"60","severity":1,"message":"78","line":3,"column":8,"nodeType":"62","messageId":"63","endLine":3,"endColumn":14},{"ruleId":"79","severity":1,"message":"80","line":32,"column":25,"nodeType":"72","endLine":32,"endColumn":121},{"ruleId":"73","severity":1,"message":"74","line":70,"column":28,"nodeType":"75","messageId":"76","endLine":70,"endColumn":30},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'Nav' is defined but never used.","'Container' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Card' is defined but never used.","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]